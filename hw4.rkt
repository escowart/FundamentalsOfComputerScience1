#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 2151 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 178
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname fundies-h"
 #"w4) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t con"
 #"structor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 17 3 11 #";Problem A1"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 35 #";dist-to-O: Number Number -> Number"
0 0 22 29 1 #"\n"
0 0 17 3 39 #";Finds the distance from (0,0) to (x,y)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"dist-to-O"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 9 #"dist-to-O"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 17 3 56 #";Step 1: (sqrt (+ (* 3 3) (* 4 4))) function application"
0 0 22 29 1 #"\n"
0 0 17 3 40 #";Step 2: (sqrt (+ 9 (* 4 4))) arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 35 #";Step 3: (sqrt (+ 9 16)) arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 29 #";Step 4: (sqrt 25) arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 21 #";Step 5: 5 arithmetic"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 5 #"point"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 4 #"temp"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 7 #"point-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 17 3 48 #";a POINT is a struct (make-point Number Number) "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 27 #";dist-to-O: POINT -> Number"
0 0 22 29 1 #"\n"
0 0 17 3 39 #";Finds the distance from (0,0) to (x,y)"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"dist-to-Ol"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 22 3 2 #" ("
0 0 14 3 7 #"point-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 4 #")) ("
0 0 14 3 3 #"sqr"
0 0 22 3 2 #" ("
0 0 14 3 7 #"point-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 10 #"dist-to-Ol"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-point"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 51 #";Step 1: (sqrt (+ (sqr (point-x (make-point 3 4))) "
0 0 22 29 1 #"\n"
0 0 17 3 74
(
 #";                 (sqr (point-y (make-point 3 4)))))  function appli"
 #"cation"
) 0 0 22 29 1 #"\n"
0 0 17 3 26 #";Step 2: (sqrt (+ (sqr 3) "
0 0 22 29 1 #"\n"
0 0 17 3 73
(
 #";                 (sqr (point-y (make-point 3 4))))) function applic"
 #"ation"
) 0 0 22 29 1 #"\n"
0 0 17 3 20 #";Step 3: (sqrt (+ 9 "
0 0 22 29 1 #"\n"
0 0 17 3 63
#";                 (sqr (point-y (make-point 3 4))))) arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 50 #";Step 3: (sqrt (+ 9 (sqr 4))) function application"
0 0 22 29 1 #"\n"
0 0 17 3 36 #";step 4: (sqrt (+ 9 16)) arithmetic "
0 0 22 29 1 #"\n"
0 0 17 3 29 #";Step 4: (sqrt 25) arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 21 #";Step 5: 5 arithmetic"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 23 #";step: Number -> Number"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 4 #"step"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 3 #"sqr"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"    [("
0 0 14 3 1 #"<"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 3 #") ("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 22 3 5 #"    ("
0 0 14 3 3 #"sqr"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 4 #"step"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 17 3 14 #";Step 1: (cond"
0 0 22 29 1 #"\n"
0 0 17 3 22 #";    [(< 1 0) (sqr 0)]"
0 0 22 29 1 #"\n"
0 0 17 3 22 #";    [(< 0 0) (* 2 0)]"
0 0 22 29 1 #"\n"
0 0 17 3 50 #";    [else    (sqr (+ 0 1))]) function application"
0 0 22 29 1 #"\n"
0 0 17 3 14 #";Step 2: (cond"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";    [false (sqr 0)]"
0 0 22 29 1 #"\n"
0 0 17 3 22 #";    [(< 0 0) (* 2 0)]"
0 0 22 29 1 #"\n"
0 0 17 3 40 #";    [else    (sqr (+ 0 1))]) arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 14 #";Step 3: (cond"
0 0 22 29 1 #"\n"
0 0 17 3 22 #";    [(< 0 0) (* 2 0)]"
0 0 22 29 1 #"\n"
0 0 17 3 39 #";    [else    (sqr (+ 0 1))]) cond step"
0 0 22 29 1 #"\n"
0 0 17 3 14 #";Step 4: (cond"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";    [false (* 2 0)]"
0 0 22 29 1 #"\n"
0 0 17 3 40 #";    [else    (sqr (+ 0 1))]) arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 14 #";Step 5: (cond"
0 0 22 29 1 #"\n"
0 0 17 3 39 #";    [else    (sqr (+ 0 1))]) cond step"
0 0 22 29 1 #"\n"
0 0 17 3 32 #";Step 6: (sqr (+ 0 1)) cond step"
0 0 22 29 1 #"\n"
0 0 17 3 28 #";Step 7: (sqr 1) arithmetic "
0 0 22 29 1 #"\n"
0 0 17 3 21 #";Step 8: 1 arithmetic"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 10 #";Problem 2"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 13 #"daily-weather"
0 0 22 3 2 #" ("
0 0 14 3 8 #"humidity"
0 0 22 3 1 #" "
0 0 14 3 3 #"zip"
0 0 22 3 1 #" "
0 0 14 3 9 #"high-temp"
0 0 22 3 1 #" "
0 0 14 3 8 #"low-temp"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 69
(
 #";WEATHER is a struct (make-daily-weather Number Number Number Number"
 #")"
) 0 0 22 29 1 #"\n"
0 0 17 3 45 #";humidity has to be between 0 and 1 inclusive"
0 0 22 29 1 #"\n"
0 0 17 3 27 #";zip is a five digit number"
0 0 22 29 1 #"\n"
0 0 17 3 76
(
 #";high-temp and low-temp are measure in celcius. must be greater than"
 #" -273.14"
) 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 7 #"temp-dw"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 22 #"daily-weather-humidity"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 17 #"daily-weather-zip"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 23 #"daily-weather-high-temp"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 22 #"daily-weather-low-temp"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 32 #";average-temp: WEATHER -> Number"
0 0 22 29 1 #"\n"
0 0 17 3 58
#";Takes a WEATHER and returns the daily average temperature"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"average-temp"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 23 #"daily-weather-high-temp"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #") ("
0 0 14 3 22 #"daily-weather-low-temp"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")) "
0 0 20 3 1 #"2"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 12 #"average-temp"
0 0 22 3 2 #" ("
0 0 14 3 18 #"make-daily-weather"
0 0 22 3 1 #" "
0 0 20 3 2 #".5"
0 0 22 3 1 #" "
0 0 20 3 5 #"01234"
0 0 22 3 1 #" "
0 0 20 3 2 #"11"
0 0 22 3 1 #" "
0 0 20 3 2 #"15"
0 0 22 3 3 #")) "
0 0 20 3 2 #"13"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 12 #"average-temp"
0 0 22 3 2 #" ("
0 0 14 3 18 #"make-daily-weather"
0 0 22 3 1 #" "
0 0 20 3 2 #".5"
0 0 22 3 1 #" "
0 0 20 3 5 #"01234"
0 0 22 3 1 #" "
0 0 20 3 2 #"19"
0 0 22 3 1 #" "
0 0 20 3 2 #"15"
0 0 22 3 3 #")) "
0 0 20 3 2 #"17"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 10 #";Problem 3"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 13 #"regular-movie"
0 0 22 3 2 #" ("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 5 #"price"
0 0 22 3 1 #" "
0 0 14 3 3 #"age"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 62
#";REGULAR is a struct (make-regular-movie String Number Number)"
0 0 22 29 1 #"\n"
0 0 17 3 41 #";id is a string XXX-XX-XXX AlphaNumerical"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";price is in dollars"
0 0 22 29 1 #"\n"
0 0 17 3 16 #";age is in years"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 13 #"classic-movie"
0 0 22 3 2 #" ("
0 0 14 3 2 #"id"
0 0 22 3 1 #" "
0 0 14 3 5 #"price"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 55 #";Classic is a struct (make-classic-movie String Number)"
0 0 22 29 1 #"\n"
0 0 17 3 41 #";id is a string XXX-XX-XXX AlphaNumerical"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";price is in dollars"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 39 #";MOVIE is either a REGULAR or a Classic"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"temp-movie"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 14 #"regular-movie?"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 16 #"regular-movie-id"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 19 #"regular-movie-price"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 17 #"regular-movie-age"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"          ["
0 0 14 3 4 #"else"
0 0 22 3 2 #"  "
0 0 14 3 3 #"..."
0 0 22 3 1 #" "
0 0 17 3 15 #";classic movie?"
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 16 #"classic-movie-id"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 11 #"           "
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 19 #"classic-movie-price"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 31 #";current-price: MOVIE -> Number"
0 0 22 29 1 #"\n"
0 0 17 3 52 #";It accepts a MOVIE and prints out its current price"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"current-price"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 14 #"regular-movie?"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 1 #">"
0 0 22 3 2 #" ("
0 0 14 3 1 #"*"
0 0 22 3 2 #" ("
0 0 14 3 19 #"regular-movie-price"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 21 #"                    ("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #" ("
0 0 14 3 1 #"*"
0 0 22 3 2 #" ("
0 0 14 3 17 #"regular-movie-age"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 20 3 4 #".035"
0 0 22 3 4 #"))) "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 1 #"*"
0 0 22 3 2 #" ("
0 0 14 3 19 #"regular-movie-price"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #")("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 2 #" ("
0 0 14 3 1 #"*"
0 0 22 3 2 #" ("
0 0 14 3 17 #"regular-movie-age"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 2 #") "
0 0 20 3 4 #".035"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ]"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 3 #"])]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 17 3 15 #";classic movie?"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 19 #"classic-movie-price"
0 0 22 3 1 #" "
0 0 14 3 1 #"m"
0 0 22 3 4 #")]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 13 #"current-price"
0 0 22 3 2 #" ("
0 0 14 3 18 #"make-regular-movie"
0 0 22 3 1 #" "
0 0 19 3 12 #"\"000-00-AAA\""
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 4 #"))  "
0 0 20 3 4 #"8.25"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 13 #"current-price"
0 0 22 3 2 #" ("
0 0 14 3 18 #"make-regular-movie"
0 0 22 3 1 #" "
0 0 19 3 12 #"\"000-00-AAA\""
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 3 #"150"
0 0 22 3 4 #"))  "
0 0 20 3 1 #"2"
0 0 22 3 3 #")  "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 13 #"current-price"
0 0 22 3 2 #" ("
0 0 14 3 18 #"make-classic-movie"
0 0 22 3 1 #" "
0 0 19 3 12 #"\"000-00-AAA\""
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 4 #"))  "
0 0 20 3 2 #"10"
0 0 22 3 3 #")  "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 10 #";Problem 4"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";; Shape is one of: "
0 0 22 29 1 #"\n"
0 0 17 3 13 #";; -- Circle "
0 0 22 29 1 #"\n"
0 0 17 3 13 #";; -- Square "
0 0 22 29 1 #"\n"
0 0 17 3 16 #";; -- Rectangle "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 5 #"circl"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 1 #"r"
0 0 22 3 1 #" "
0 0 14 3 7 #"outline"
0 0 22 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 16 #";; A Circle is a"
0 0 22 29 1 #"\n"
0 0 17 3 52 #";;  (make-circl Number Number Number Boolean Symbol)"
0 0 22 29 1 #"\n"
0 0 17 3 62
#";; interpretation: x and y determine the center of the circle,"
0 0 22 29 1 #"\n"
0 0 17 3 59
#";;   r the radius, outline whether it's outlined or solid, "
0 0 22 29 1 #"\n"
0 0 17 3 20 #";;   and c its color"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 5 #"squar"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 4 #"size"
0 0 22 3 1 #" "
0 0 14 3 7 #"outline"
0 0 22 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 16 #";; A Square is a"
0 0 22 29 1 #"\n"
0 0 17 3 52 #";;  (make-squar Number Number Number Boolean Symbol)"
0 0 22 29 1 #"\n"
0 0 17 3 58
#";; interpretation: Supply a good interpretation of Square."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 5 #"recta"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 5 #"width"
0 0 22 3 1 #" "
0 0 14 3 6 #"height"
0 0 22 3 1 #" "
0 0 14 3 7 #"outline"
0 0 22 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 19 #";; A Rectangle is a"
0 0 22 29 1 #"\n"
0 0 17 3 59
#";;  (make-recta Number Number Number Number Boolean Symbol)"
0 0 22 29 1 #"\n"
0 0 17 3 61
#";; interpretation: Supply a good interpretation of Rectangle."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 33 #";; ... problem solving steps ... "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 32 #";; inspect for expected results:"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 1 #" "
0 0 20 3 3 #"100"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 2 #"pt"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 22 3 2 #"  "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 7 #"sh-temp"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[ "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 6 #"circl?"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 7 #"circl-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 7 #"circl-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 7 #"circl-r"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 13 #"circl-outline"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 7 #"circl-c"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 6 #"squar?"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 7 #"squar-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 7 #"squar-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 10 #"squar-size"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 13 #"squar-outline"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 7 #"squar-c"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 10 #"...else..."
0 0 22 3 1 #"("
0 0 14 3 7 #"recta-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 7 #"recta-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 11 #"recta-width"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 12 #"recta-height"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"("
0 0 14 3 13 #"recta-outline"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 7 #"recta-c"
0 0 22 3 1 #" "
0 0 14 3 1 #"s"
0 0 22 3 1 #")"
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 17 3 11 #";(recta? s)"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       ))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 41 #";shape-shift-x: Shape and Number -> Shape"
0 0 22 29 1 #"\n"
0 0 17 3 50 #";The function takes a shape and a number delta and"
0 0 22 29 1 #"\n"
0 0 17 3 40 #";shifts the shape by delta on the x-axis"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"shape-shift-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #" "
0 0 14 3 5 #"delta"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"circl?"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 10 #"make-circl"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 7 #"circl-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 14 3 5 #"delta"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 7 #"circl-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 7 #"circl-r"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 13 #"circl-outline"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 7 #"circl-c"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       [("
0 0 14 3 6 #"squar?"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 10 #"make-squar"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 7 #"squar-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 14 3 5 #"delta"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 7 #"squar-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 10 #"squar-size"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 13 #"squar-outline"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 7 #"squar-c"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-recta"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 7 #"recta-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 14 3 5 #"delta"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 7 #"recta-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 11 #"recta-width"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 12 #"recta-height"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 13 #"recta-outline"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 7 #"recta-c"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 6 #"))])) "
0 0 17 3 12 #";(recta? sh)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 13 #"shape-shift-x"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 2 #") "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 10 #"make-circl"
0 0 22 3 1 #" "
0 0 20 3 3 #"140"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 13 #"shape-shift-x"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-recta"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 20 3 2 #"15"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 20 3 2 #"30"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 10 #"make-recta"
0 0 22 3 1 #" "
0 0 20 3 3 #"160"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 20 3 2 #"15"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 13 #"shape-shift-x"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 2 #") "
0 0 20 3 3 #"130"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 3 #"260"
0 0 22 3 1 #" "
0 0 20 3 3 #"130"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 35 #";distance-from: Posn Posn -> Number"
0 0 22 29 1 #"\n"
0 0 17 3 74
(
 #";the function takes point1's posn and point2's posn and gives the di"
 #"stance"
) 0 0 22 29 1 #"\n"
0 0 17 3 13 #";between them"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 13 #"distance-from"
0 0 22 3 1 #" "
0 0 14 3 4 #"posa"
0 0 22 3 1 #" "
0 0 14 3 4 #"posb"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"sqrt"
0 0 22 3 2 #" ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 3 #"sqr"
0 0 22 3 2 #" ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 4 #"posb"
0 0 22 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 4 #"posa"
0 0 22 3 4 #"))) "
0 0 22 29 1 #"\n"
0 0 22 3 12 #"           ("
0 0 14 3 3 #"sqr"
0 0 22 3 2 #" ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 4 #"posb"
0 0 22 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 4 #"posa"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 13 #"distance-from"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 2 #"-3"
0 0 22 3 1 #" "
0 0 20 3 2 #"-4"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 3 #")) "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 37 #";shape-in?: Shape and posn -> Boolean"
0 0 22 29 1 #"\n"
0 0 17 3 79
(
 #";The functions take a shape and a posn and tells you whether the sha"
 #"pe contains"
) 0 0 22 29 1 #"\n"
0 0 17 3 9 #";the posn"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"circl?"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 2 #">="
0 0 22 3 2 #" ("
0 0 14 3 7 #"circl-r"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 25 #"                        ("
0 0 14 3 13 #"distance-from"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 41 #"                                        ("
0 0 14 3 7 #"circl-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 41 #"                                        ("
0 0 14 3 7 #"circl-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #")) "
0 0 14 3 1 #"p"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       [("
0 0 14 3 6 #"squar?"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 2 #"<="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 7 #"squar-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 10 #"squar-size"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 2 #">="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 7 #"squar-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 1 #"("
0 0 14 3 10 #"squar-size"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 2 #"<="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 7 #"squar-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 10 #"squar-size"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 2 #">="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 7 #"squar-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 10 #"squar-size"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 5 #"))))]"
0 0 22 29 1 #"\n"
0 0 22 3 7 #"       "
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 2 #"<="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #") ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 7 #"recta-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 11 #"recta-width"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 2 #">="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #") ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 7 #"recta-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 11 #"recta-width"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 2 #"<="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #") ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 7 #"recta-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 12 #"recta-height"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 19 #"                  ("
0 0 14 3 2 #">="
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 3 #") ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 7 #"recta-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 1 #"/"
0 0 22 3 2 #" ("
0 0 14 3 12 #"recta-height"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 20 3 1 #"2"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ]"
0 0 17 3 11 #";(recta? s)"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       ))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 3 #")) "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")) "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 22 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 22 3 3 #")) "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 4 #"-0.5"
0 0 22 3 1 #" "
0 0 20 3 4 #"-0.5"
0 0 22 3 3 #")) "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 3 #")) "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")) "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-recta"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 22 3 1 #" "
0 0 20 3 3 #"0.5"
0 0 22 3 3 #")) "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-recta"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 4 #"-0.5"
0 0 22 3 1 #" "
0 0 20 3 4 #"-0.5"
0 0 22 3 3 #")) "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-recta"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 3 #")) "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"shape-in?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-recta"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 3 #")) "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 29 #";fill-type: boolean -> symbol"
0 0 22 29 1 #"\n"
0 0 17 3 67
#";the function says whether it is 'solid (false) or 'outlined (true)"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 9 #"fill-type"
0 0 22 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 1 #"["
0 0 14 3 1 #"b"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"fill-type"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 3 #")  "
0 0 20 3 1 #"'"
0 0 14 3 7 #"outline"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 9 #"fill-type"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 37 #";shape-draw: Shape and Scene -> Image"
0 0 22 29 1 #"\n"
0 0 17 3 42 #";the functions puts the shape on the scene"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"shape-draw"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 1 #" "
0 0 14 3 2 #"sc"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"circl?"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 22 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 22 3 2 #" ("
0 0 14 3 7 #"circl-r"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 14 3 9 #"fill-type"
0 0 22 3 2 #" ("
0 0 14 3 13 #"circl-outline"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 14 3 7 #"circl-c"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 7 #"circl-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 7 #"circl-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 14 3 2 #"sc"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       [("
0 0 14 3 6 #"squar?"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 22 3 2 #" ("
0 0 14 3 6 #"square"
0 0 22 3 2 #" ("
0 0 14 3 10 #"squar-size"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 14 3 9 #"fill-type"
0 0 22 3 2 #" ("
0 0 14 3 13 #"squar-outline"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 14 3 7 #"squar-c"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 7 #"squar-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 7 #"squar-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 14 3 2 #"sc"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 22 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 22 3 2 #" ("
0 0 14 3 11 #"recta-width"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #") ("
0 0 14 3 12 #"recta-height"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                     ("
0 0 14 3 9 #"fill-type"
0 0 22 3 2 #" ("
0 0 14 3 13 #"recta-outline"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                     ("
0 0 14 3 7 #"recta-c"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 14 3 7 #"recta-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 14 3 7 #"recta-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"sh"
0 0 22 3 2 #") "
0 0 14 3 2 #"sc"
0 0 22 3 2 #")]"
0 0 17 3 12 #";(recta? sh)"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       ))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 10 #"shape-draw"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-circl"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 14 3 11 #"empty-scene"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 3 #")) "
0 12           4 56 790
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20 0) #(struct:po"
 #"int 20 20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 5 5 #(struct:translate 5 5 #(struct:ellipse "
 #"10 10 0 outline \"red\"))) #(struct:translate 0 0 #(struct:crop (#(s"
 #"truct:point 0 0) #(struct:point 20 0) #(struct:point 20 20) #(struct"
 #":point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 20 0) #(struct:point 20 20) #(struct:point 0 20)) o"
 #"utline #(struct:pen \"black\" 2 solid round round)))) #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 20 0) #(struct:point 20 20) #(struct:point 0 20)) 2"
 #"55 \"white\")))))))))) #(struct:bb 20 20 20) #f)"
) 0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 10 #"shape-draw"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-squar"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 14 3 11 #"empty-scene"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 3 #")) "
0 12           4 56 868
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20 0) #(struct:po"
 #"int 20 20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 15/2 15/2 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:point 0 0) #(struct:point 5 0) #(struct:point 5 5) #"
 #"(struct:point 0 5)) 255 \"green\"))) #(struct:translate 0 0 #(struct"
 #":crop (#(struct:point 0 0) #(struct:point 20 0) #(struct:point 20 20"
 #") #(struct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 20 0) #(struct:point 20 20) #(struct:poin"
 #"t 0 20)) outline #(struct:pen \"black\" 2 solid round round)))) #(st"
 #"ruct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":point 0 0) #(struct:point 20 0) #(struct:point 20 20) #(struct:poin"
 #"t 0 20)) 255 \"white\")))))))))) #(struct:bb 20 20 20) #f)"
) 0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 10 #"shape-draw"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-recta"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 14 3 11 #"empty-scene"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 3 #")) "
0 12           4 56 864
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 20 0) #(struct:po"
 #"int 20 20) #(struct:point 0 20)) #(struct:translate 0 0 #(struct:ove"
 #"rlay #(struct:translate 15/2 8 #(struct:translate 0 0 #(struct:polyg"
 #"on (#(struct:point 0 0) #(struct:point 5 0) #(struct:point 5 4) #(st"
 #"ruct:point 0 4)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 20 0) #(struct:point 20 20) #("
 #"struct:point 0 20)) #(struct:translate 0 0 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:poi"
 #"nt 0 0) #(struct:point 20 0) #(struct:point 20 20) #(struct:point 0 "
 #"20)) outline #(struct:pen \"black\" 2 solid round round)))) #(struct"
 #":translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:poi"
 #"nt 0 0) #(struct:point 20 0) #(struct:point 20 20) #(struct:point 0 "
 #"20)) 255 \"white\")))))))))) #(struct:bb 20 20 20) #f)"
) 0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 10 #"shape-draw"
0 0 17 3 2 #" ("
0 0 17 3 10 #"make-circl"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 3 #"130"
0 0 17 3 1 #" "
0 0 17 3 1 #"5"
0 0 17 3 1 #" "
0 0 17 3 4 #"true"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 3 #"red"
0 0 17 3 2 #") "
0 0 17 29 1 #"\n"
0 0 17 3 3 #"  ("
0 0 17 3 10 #"shape-draw"
0 0 17 3 1 #" "
0 0 17 3 2 #"sh"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 11 #"empty-scene"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 1 #" "
0 0 17 3 3 #"300"
0 0 17 3 3 #")))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0           0
