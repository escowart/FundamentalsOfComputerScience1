#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 64 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
22 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
41 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
43 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 2795 0 17 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 22 29 1 #"\n"
0 0 17 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 22 29 1 #"\n"
0 0 24 3 7 #"#reader"
0 0 22 3 1 #"("
0 0 14 3 3 #"lib"
0 0 22 3 1 #" "
0 0 19 3 25 #"\"htdp-beginner-reader.ss\""
0 0 22 3 1 #" "
0 0 19 3 6 #"\"lang\""
0 0 22 3 3 #")(("
0 0 14 3 7 #"modname"
0 0 22 3 1 #" "
0 0 14 3 11 #"fundies-ps5"
0 0 22 3 3 #") ("
0 0 14 3 19 #"read-case-sensitive"
0 0 22 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 3 #") ("
0 0 14 3 10 #"teachpacks"
0 0 22 3 6 #" ()) ("
0 0 14 3 13 #"htdp-settings"
0 0 22 3 3 #" #("
0 0 20 3 2 #"#t"
0 0 22 3 1 #" "
0 0 14 3 11 #"constructor"
0 0 22 3 1 #" "
0 0 14 3 17 #"repeating-decimal"
0 0 22 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 1 #" "
0 0 20 3 2 #"#t"
0 0 22 3 1 #" "
0 0 14 3 4 #"none"
0 0 22 3 1 #" "
0 0 20 3 2 #"#f"
0 0 22 3 6 #" ())))"
0 0 22 29 1 #"\n"
0 0 17 3 16 #";;;Problem Set 5"
0 0 22 29 1 #"\n"
0 0 17 3 15 #";;;Edwin Cowart"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 5 #";;;A1"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 19 #";;;a LOP is one of:"
0 0 22 29 1 #"\n"
0 0 17 3 8 #";;;empty"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";;;(cons String LOP)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-lop"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-lop"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 14 3 3 #"..."
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 35 #";;;check-pass-6-10?: LOP -> Boolean"
0 0 22 29 1 #"\n"
0 0 17 3 42 #";;;Consumes an LOP and determines if each "
0 0 22 29 1 #"\n"
0 0 17 3 63
#";;;String in the list has between 6 - 10 characters (inclusive)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-pass-6-10?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-pass-6-10?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 25 #"                        ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 2 #"<="
0 0 22 3 1 #" "
0 0 20 3 1 #"6"
0 0 22 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 20 3 2 #"10"
0 0 22 3 7 #"))))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-pass-6-10?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 10 #"\"password\""
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"password2\""
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"              "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-pass-6-10?"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"              "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-pass-6-10?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 13 #"\"password111\""
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"password2\""
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"              "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 16 #"check-pass-6-10?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"passw\""
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"password2\""
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"              "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 44 #";;;check-pass?: LOP Number Number -> Boolean"
0 0 22 29 1 #"\n"
0 0 17 3 42 #";;;Consumes an LOP and determines if each "
0 0 22 29 1 #"\n"
0 0 17 3 70
(
 #";;;String in the list has a length between the two numbers (inclusiv"
 #"e)"
) 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"check-pass?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #" "
0 0 14 3 3 #"min"
0 0 22 3 1 #" "
0 0 14 3 3 #"max"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"   ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 11 #"check-pass?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"min"
0 0 22 3 1 #" "
0 0 14 3 3 #"max"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 25 #"                        ("
0 0 14 3 3 #"not"
0 0 22 3 2 #" ("
0 0 14 3 2 #"<="
0 0 22 3 1 #" "
0 0 14 3 3 #"min"
0 0 22 3 2 #" ("
0 0 14 3 13 #"string-length"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 14 3 3 #"max"
0 0 22 3 7 #"))))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 11 #"check-pass?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 10 #"\"password\""
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 11 #"\"password2\""
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")) "
0 0 20 3 1 #"6"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"              "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 11 #"check-pass?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"pas\""
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"pa\""
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")) "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"              "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 5 #";;;A2"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 21 #";;;A LOT is either a:"
0 0 22 29 1 #"\n"
0 0 17 3 8 #";;;empty"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";;;(cons Number LOT)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 21 #";;;A LOB is either a:"
0 0 22 29 1 #"\n"
0 0 17 3 8 #";;;empty"
0 0 22 29 1 #"\n"
0 0 17 3 21 #";;;(cons Boolean LOB)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-lot"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-lot"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 14 3 3 #"..."
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 26 #";;;anomaly: LOT LOT -> LOB"
0 0 22 29 1 #"\n"
0 0 17 3 79
(
 #";;;Compares two LOT and returns true if midnight temp is greater tha"
 #"n noon temp"
) 0 0 22 29 1 #"\n"
0 0 17 3 42 #";;;The two list have to be the same length"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 7 #"anomaly"
0 0 22 3 1 #" "
0 0 14 3 4 #"noon"
0 0 22 3 1 #" "
0 0 14 3 8 #"midnight"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 2 #"or"
0 0 22 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 4 #"noon"
0 0 22 3 3 #") ("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 8 #"midnight"
0 0 22 3 3 #")) "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 1 #">"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 8 #"midnight"
0 0 22 3 3 #") ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 4 #"noon"
0 0 22 3 3 #")) "
0 0 22 29 1 #"\n"
0 0 22 3 20 #"                   ("
0 0 14 3 7 #"anomaly"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 4 #"noon"
0 0 22 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 8 #"midnight"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 7 #"anomaly"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"60"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"60"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 7 #"anomaly"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"60"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 4 #")) ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 2 #"60"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 7 #"anomaly"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"              "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 5 #";;;A3"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 21 #";;;A LOS is either a:"
0 0 22 29 1 #"\n"
0 0 17 3 8 #";;;empty"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";;;(cons Symbol LOS)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-los"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 1 #" "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-los"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 14 3 3 #"..."
0 0 22 3 3 #"]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 23 #";;;cesarify: LOS -> LOS"
0 0 22 29 1 #"\n"
0 0 17 3 57 #";;;consumes a LOS and duplicates every instance of 'pizza"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"cesarify"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       [("
0 0 14 3 8 #"symbol=?"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pizza"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pizza"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pizza"
0 0 22 3 2 #" ("
0 0 14 3 8 #"cesarify"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 5 #"))))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #") ("
0 0 14 3 8 #"cesarify"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 2 #" ("
0 0 14 3 8 #"cesarify"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"wurst"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"huevos"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pizza"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pants"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 5 #")))))"
0 0 22 29 1 #"\n"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"wurst"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"huevos"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pizza"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pizza"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"pants"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 8 #"cesarify"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 5 #";;;A4"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 6 #"figure"
0 0 22 3 2 #" ("
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 7 #"example"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 17 3 43 #";;;A FIGURE is a (make-figure Symbol Image)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"temp-figure"
0 0 22 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 11 #"figure-name"
0 0 22 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 14 #"figure-example"
0 0 22 3 1 #" "
0 0 14 3 1 #"f"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 23 #";;;A catalog is either:"
0 0 22 29 1 #"\n"
0 0 17 3 8 #";;;empty"
0 0 22 29 1 #"\n"
0 0 17 3 24 #";;;(cons FIGURE catalog)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-cat"
0 0 22 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-cat"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"c"
0 0 22 3 3 #")) "
0 0 14 3 3 #"..."
0 0 22 3 4 #" ]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 14 #"sample-catalog"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 11 #"make-figure"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"Circle"
0 0 22 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 22 3 1 #" "
0 0 20 3 2 #"15"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 11 #"make-figure"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 7 #"Ellipse"
0 0 22 3 2 #" ("
0 0 14 3 7 #"ellipse"
0 0 22 3 1 #" "
0 0 20 3 2 #"25"
0 0 22 3 1 #" "
0 0 20 3 2 #"40"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 11 #"make-figure"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"Line"
0 0 22 3 2 #" ("
0 0 14 3 4 #"line"
0 0 22 3 1 #" "
0 0 20 3 2 #"17"
0 0 22 3 1 #" "
0 0 20 3 2 #"14"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 21 #"                    ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 11 #"make-figure"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 8 #"Triangle"
0 0 22 3 2 #" ("
0 0 14 3 8 #"triangle"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 27 #"                          ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 11 #"make-figure"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"Square"
0 0 22 3 2 #" ("
0 0 14 3 6 #"square"
0 0 22 3 1 #" "
0 0 20 3 2 #"25"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"green"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                                "
0 0 14 3 5 #"empty"
0 0 22 3 6 #"))))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 51 #";;;show-example: Symbol catalog -> Image or Boolean"
0 0 22 29 1 #"\n"
0 0 17 3 70
(
 #";;;It checks for the symbol in the catalog for the corresponding ima"
 #"ge"
) 0 0 22 29 1 #"\n"
0 0 17 3 43 #";;;and prints it otherwise it returns false"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 12 #"show-example"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 1 #" "
0 0 14 3 3 #"cat"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 3 #"cat"
0 0 22 3 2 #") "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       [("
0 0 14 3 8 #"symbol=?"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 11 #"figure-name"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 3 #"cat"
0 0 22 3 5 #"))) ("
0 0 14 3 14 #"figure-example"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 3 #"cat"
0 0 22 3 3 #"))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 12 #"show-example"
0 0 22 3 1 #" "
0 0 14 3 4 #"name"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 3 #"cat"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 12 #"show-example"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"Square"
0 0 22 3 1 #" "
0 0 14 3 14 #"sample-catalog"
0 0 22 3 2 #") "
0 12           4 62 166
(
 #"(#(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 25 0) #(struct:point 25 25) #(struct:point 0 25)) 255 \"gre"
 #"en\")) #(struct:bb 25 25 25) #f)"
) 0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 12 #"show-example"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 9 #"Rectangle"
0 0 22 3 1 #" "
0 0 14 3 14 #"sample-catalog"
0 0 22 3 2 #") "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 12 #"show-example"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 6 #"Square"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #") "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 5 #";;;A5"
0 0 22 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"(define (fahrenheit->celsius f)"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"  (* 5/9 (- f 32)))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 31 #"(define (celsius->fahrenheit c)"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"  (+ (* 9/5 c) 32))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 47 #"(celsius->fahrenheit (fahrenheit->celsius 212))"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 33 #";;;Step 1: (celsius->fahrenheit ("
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 3 #"5/9"
0 0 17 3 2 #" ("
0 0 17 3 33 #"- 212 32))) ;function application"
0 0 22 29 1 #"\n"
0 0 17 3 63
#";;;Step 2: (celsius->fahrenheit (* 5/9 180))        ;arithmetic"
0 0 22 29 1 #"\n"
0 0 17 3 62
#";;;Step 3: (celsius->fahrenheit 100)                ;arithetic"
0 0 22 29 1 #"\n"
0 0 17 3 73
(
 #";;;Step 4: (+ (* 9/5 100) 32))                      ;function applic"
 #"ation"
) 0 0 22 29 1 #"\n"
0 0 17 3 62
#";;;Step 5: (+ 180 32)                               ;arithetic"
0 0 22 29 1 #"\n"
0 0 17 3 62
#";;;Step 6: 212                                      ;arithetic"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 43 #"(define-struct customer (title first last))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"(define (formal* loc)"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"  (cond [(empty? loc) empty]"
0 0 17 29 1 #"\n"
0 0 17 3 40 #"        [else (cons (formal (first loc))"
0 0 17 29 1 #"\n"
0 0 17 3 44 #"                    (formal* (rest loc)))]))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 18 #"(define (formal c)"
0 0 17 29 1 #"\n"
0 0 17 3 25 #"  (string-append \"Dear \" "
0 0 17 29 1 #"\n"
0 0 17 3 36 #"                 (customer-title c) "
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                 \" \" "
0 0 17 29 1 #"\n"
0 0 17 3 36 #"                 (customer-last c)))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 53
#"(formal* (cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 21 #"             empty)))"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 1:"
0 0 17 29 1 #"\n"
0 0 17 3 15 #"(cond [(empty? "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 28 #"             empty))) empty]"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"        [else (cons (formal (first "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 22 #"             empty))))"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                    (formal* (rest "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 25 #"             empty)))))])"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 2:"
0 0 17 29 1 #"\n"
0 0 17 3 19 #"(cond [false empty]"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"        [else (cons (formal (first "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 22 #"             empty))))"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                    (formal* (rest "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 25 #"             empty)))))])"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 3:"
0 0 17 29 1 #"\n"
0 0 17 3 33 #"(cond [else (cons (formal (first "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 22 #"             empty))))"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                    (formal* (rest "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 25 #"             empty)))))])"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"cond step"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 4:"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"(cons (formal (first "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 22 #"             empty))))"
0 0 17 29 1 #"\n"
0 0 17 3 35 #"                    (formal* (rest "
0 0 17 3 44 #"(cons (make-customer \"Dr.\" \"Olin\" \"Shivers\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"cond step"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 5:"
0 0 17 29 1 #"\n"
0 0 17 3 54
#"(cons (formal  (make-customer \"Dr.\" \"Olin\" \"Shivers\"))"
0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"                    (formal* (rest (cons (make-customer \"Dr.\" \"Ol"
 #"in\" \"Shivers\")"
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"functional application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 6:"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"(cons (string-append \"Dear \" "
0 0 17 29 1 #"\n"
0 0 17 3 73
(
 #"                 (customer-title (make-customer \"Dr.\" \"Olin\" \"S"
 #"hivers\")) "
) 0 0 17 29 1 #"\n"
0 0 17 3 21 #"                 \" \" "
0 0 17 29 1 #"\n"
0 0 17 3 72
(
 #"                 (customer-last (make-customer \"Dr.\" \"Olin\" \"Sh"
 #"ivers\")))"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"                    (formal* (rest (cons (make-customer \"Dr.\" \"Ol"
 #"in\" \"Shivers\")"
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"functional application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 7:"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"(cons (string-append \"Dear \" "
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                 \"Dr.\") "
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                 \" \" "
0 0 17 29 1 #"\n"
0 0 17 3 72
(
 #"                 (customer-last (make-customer \"Dr.\" \"Olin\" \"Sh"
 #"ivers\")))"
) 0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"                    (formal* (rest (cons (make-customer \"Dr.\" \"Ol"
 #"in\" \"Shivers\")"
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"functional application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 8:"
0 0 17 29 1 #"\n"
0 0 17 3 29 #"(cons (string-append \"Dear \" "
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                 \"Dr.\") "
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                 \" \" "
0 0 17 29 1 #"\n"
0 0 17 3 27 #"                 \"Shivers\")"
0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"                    (formal* (rest (cons (make-customer \"Dr.\" \"Ol"
 #"in\" \"Shivers\")"
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 10 #"arithmatic"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 10 #";;;Step 9:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 79
(
 #"                    (formal* (rest (cons (make-customer \"Dr.\" \"Ol"
 #"in\" \"Shivers\")"
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 49 #"       (cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"functional application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 10:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 71
(
 #"                    (formal* (co"
 #"ns (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
) 0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 21 #"             empty)))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"functional application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 11:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 6 #"     ("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" [("
0 0 17 3 6 #"empty?"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 21 #"             empty)) "
0 0 17 3 5 #"empty"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 12 #"           ["
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 8 #"formal ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 21 #"             empty)))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 25 #"             empty))))]))"
0 0 17 29 1 #"\n"
0 0 17 3 22 #"functional application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 12:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cond"
0 0 17 3 8 #" [false "
0 0 17 3 5 #"empty"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"            ["
0 0 17 3 4 #"else"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 6 #"formal"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                  (first"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 21 #"             empty)))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 19 #"                  ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 25 #"             empty))))]))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 13:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 11 #"      (cond"
0 0 17 3 8 #" [else ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 6 #"formal"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 21 #"             empty)))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 25 #"             empty))))]))"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"cond step"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 14:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 6 #"formal"
0 0 17 3 2 #" ("
0 0 17 3 5 #"first"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 21 #"             empty)))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 9 #"cond step"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 15:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 6 #"formal"
0 0 17 3 38 #" (make-customer \"Mstr.\" \"ZC\" \"Flatt\"))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 16:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 13 #"string-append"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"Dear \""
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 18 #"                 ("
0 0 17 3 14 #"customer-title"
0 0 17 3 39 #" (make-customer \"Mstr.\" \"ZC\" \"Flatt\")) "
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                 "
0 0 17 3 3 #"\" \""
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 18 #"                 ("
0 0 17 3 13 #"customer-last"
0 0 17 3 39 #" (make-customer \"Mstr.\" \"ZC\" \"Flatt\")))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 17:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 13 #"string-append"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"Dear \""
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                 \"Mstr.\""
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                 "
0 0 17 3 3 #"\" \""
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 18 #"                 ("
0 0 17 3 13 #"customer-last"
0 0 17 3 39 #" (make-customer \"Mstr.\" \"ZC\" \"Flatt\")))"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 17:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 13 #"string-append"
0 0 17 3 1 #" "
0 0 17 3 7 #"\"Dear \""
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 24 #"                 \"Mstr.\""
0 0 17 29 1 #"\n"
0 0 17 3 17 #"                 "
0 0 17 3 3 #"\" \""
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 25 #"                 \"Flatt\")"
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 18:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 7 #"      ("
0 0 17 3 23 #"cons \"Dear Mstr. Flatt\""
0 0 17 29 1 #"\n"
0 0 17 3 28 #"                    (formal*"
0 0 17 3 2 #" ("
0 0 17 3 4 #"rest"
0 0 17 3 1 #" "
0 0 17 3 42 #"(cons (make-customer \"Mstr.\" \"ZC\" \"Flatt\")"
0 0 17 29 1 #"\n"
0 1 17 65 1 #"\t"
0 0 17 3 23 #"             empty)))))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 19:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 30 #"      (cons \"Dear Mstr. Flatt\""
0 0 17 29 1 #"\n"
0 0 17 3 37 #"                    (formal* empty)))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 20:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 30 #"      (cons \"Dear Mstr. Flatt\""
0 0 17 29 1 #"\n"
0 0 17 3 20 #"                    "
0 0 17 3 1 #"("
0 0 17 3 4 #"cond"
0 0 17 3 3 #" [("
0 0 17 3 14 #"empty? empty) "
0 0 17 3 5 #"empty"
0 0 17 3 1 #"]"
0 0 17 29 1 #"\n"
0 0 17 3 13 #"        [else"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 6 #"formal"
0 0 17 3 2 #" ("
0 0 17 3 13 #"first empty))"
0 0 17 29 1 #"\n"
0 0 17 3 21 #"                    ("
0 0 17 3 7 #"formal*"
0 0 17 3 2 #" ("
0 0 17 3 17 #"rest empty)))])))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 29 1 #"\n"
0 0 17 3 11 #";;;Step 21:"
0 0 17 29 1 #"\n"
0 0 17 3 24 #"(cons \"Dear Dr. Shivers\""
0 0 17 29 1 #"\n"
0 0 17 3 30 #"      (cons \"Dear Mstr. Flatt\""
0 0 17 29 1 #"\n"
0 0 17 3 27 #"                    empty))"
0 0 17 29 1 #"\n"
0 0 17 3 20 #"function application"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 5 #";;;A6"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 4 #"ball"
0 0 22 3 2 #" ("
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 5 #"color"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 17 3 41 #";; Ball = (make-ball Number Number Color)"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 17 3 45 #";; Color is one of 'red, 'yellow, 'blue, etc."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 27 #";;;a ListOfBalls is either:"
0 0 22 29 1 #"\n"
0 0 17 3 8 #";;;empty"
0 0 22 29 1 #"\n"
0 0 17 3 26 #";;;(cons Ball ListofBalls)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#;"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-lob"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 3 #"..."
0 0 22 3 2 #" ("
0 0 14 3 8 #"temp-lob"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 14 3 3 #"..."
0 0 22 3 4 #" ]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 36 #";;;lob-length: ListOfBalls -> Number"
0 0 22 29 1 #"\n"
0 0 17 3 46 #";;;Counts the number of balls in a ListOfBalls"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-length"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 20 3 1 #"0"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-length"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-length"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #") "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-length"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 4 #"))) "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 19 #";;;A LOX is either:"
0 0 22 29 1 #"\n"
0 0 17 3 8 #";;;empty"
0 0 22 29 1 #"\n"
0 0 17 3 20 #";;;(cons Number LOX)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 28 #";;;lob-x: ListOfBalls -> LOX"
0 0 22 29 1 #"\n"
0 0 17 3 67
#";;;extracts the x-coords from a ListOfBalls and returns them an LOX"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 5 #"lob-x"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 4 #")) ("
0 0 14 3 5 #"lob-x"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 5 #"lob-x"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 5 #"lob-x"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 4 #"))) "
0 0 22 29 1 #"\n"
0 0 22 3 15 #"              ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 33 #";;;lob-draw: ListOfBalls -> Image"
0 0 22 29 1 #"\n"
0 0 17 3 43 #";;;places all the balls on the empty scene."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 8 #"lob-draw"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #") ("
0 0 14 3 11 #"empty-scene"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 2 #")]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 22 3 2 #" ("
0 0 14 3 6 #"circle"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 22 3 2 #" ("
0 0 14 3 10 #"ball-color"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 6 #"ball-x"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 4 #")) ("
0 0 14 3 6 #"ball-y"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                 ("
0 0 14 3 8 #"lob-draw"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 17 3 1 #"#"
0 0 17 3 1 #"|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 8 #"lob-draw"
0 0 17 3 2 #" ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-ball"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 2 #"50"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"blue"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 30 #"                             ("
0 0 17 3 4 #"cons"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-ball"
0 0 17 3 1 #" "
0 0 17 3 3 #"110"
0 0 17 3 1 #" "
0 0 17 3 3 #"120"
0 0 17 3 1 #" "
0 0 17 3 1 #"'"
0 0 17 3 4 #"blue"
0 0 17 3 2 #") "
0 0 17 3 5 #"empty"
0 0 17 3 4 #"))) "
0 12           4 17 1064
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 300 0) #(struct:p"
 #"oint 300 300) #(struct:point 0 300)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 47 47 #(struct:translate 3 3 #(struct:el"
 #"lipse 6 6 0 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop (#("
 #"struct:point 0 0) #(struct:point 300 0) #(struct:point 300 300) #(st"
 #"ruct:point 0 300)) #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 107 117 #(struct:translate 3 3 #(struct:ellipse 6 6 0 255 "
 #"\"blue\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 300 0) #(struct:point 300 300) #(struct:point 0 300"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:"
 #"point 300 0) #(struct:point 300 300) #(struct:point 0 300)) outline "
 #"#(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 300 0) #(struct:point 300 300) #(struct:point 0 300)) 255 "
 #"\"white\")))))))))))))) #(struct:bb 300 300 300) #f)"
) 0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 41 #";;;lob-filter: ListOfBalls -> ListOfBalls"
0 0 22 29 1 #"\n"
0 0 17 3 59
#";;;removes all balls outside a 300 by 300 scene (inclusive)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-filter"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"       [("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 2 #"<="
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 20 3 3 #"300"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 2 #"<="
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #")) "
0 0 20 3 3 #"300"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 9 #"        ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 3 #") ("
0 0 14 3 10 #"lob-filter"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 4 #")))]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-filter"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 1 #"l"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-filter"
0 0 22 3 1 #" "
0 0 14 3 5 #"empty"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 10 #"lob-filter"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 36 #"                                   ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 3 #"301"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                         ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 1 #" "
0 0 20 3 3 #"301"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 48 #"                                               ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 52 #"                                                   ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 57 #"                                                         "
0 0 14 3 5 #"empty"
0 0 22 3 8 #"))))))) "
0 0 22 29 1 #"\n"
0 0 22 3 14 #"             ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 30 #"                             ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 1 #" "
0 0 20 3 3 #"300"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 2 #") "
0 0 14 3 5 #"empty"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 31 #";;;ball=?: Ball Ball -> Boolean"
0 0 22 29 1 #"\n"
0 0 17 3 52 #";;;Tells you whether the two balls are the same ball"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball=?"
0 0 22 3 1 #" "
0 0 14 3 2 #"b1"
0 0 22 3 1 #" "
0 0 14 3 2 #"b2"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 3 #"and"
0 0 22 3 2 #" ("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"b1"
0 0 22 3 3 #") ("
0 0 14 3 6 #"ball-x"
0 0 22 3 1 #" "
0 0 14 3 2 #"b2"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 1 #"="
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"b1"
0 0 22 3 3 #") ("
0 0 14 3 6 #"ball-y"
0 0 22 3 1 #" "
0 0 14 3 2 #"b2"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ("
0 0 14 3 8 #"symbol=?"
0 0 22 3 2 #" ("
0 0 14 3 10 #"ball-color"
0 0 22 3 1 #" "
0 0 14 3 2 #"b1"
0 0 22 3 3 #") ("
0 0 14 3 10 #"ball-color"
0 0 22 3 1 #" "
0 0 14 3 2 #"b2"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball=?"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 3 #")) "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball=?"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 3 #") ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 3 #")) "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 42 #";;;lob-member? ListOfBalls Ball -> Boolean"
0 0 22 29 1 #"\n"
0 0 17 3 52 #";;;Determines weither the ListOfBalls contains Balls"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 11 #"lob-member?"
0 0 22 3 1 #" "
0 0 14 3 3 #"lob"
0 0 22 3 1 #" "
0 0 14 3 1 #"b"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 1 #" "
0 0 14 3 3 #"lob"
0 0 22 3 2 #") "
0 0 14 3 5 #"false"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 2 #"or"
0 0 22 3 2 #" ("
0 0 14 3 6 #"ball=?"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 1 #" "
0 0 14 3 3 #"lob"
0 0 22 3 2 #") "
0 0 14 3 1 #"b"
0 0 22 3 3 #") ("
0 0 14 3 11 #"lob-member?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 22 3 1 #" "
0 0 14 3 3 #"lob"
0 0 22 3 2 #") "
0 0 14 3 1 #"b"
0 0 22 3 5 #"))]))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 11 #"lob-member?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                      "
0 0 14 3 5 #"empty"
0 0 22 3 4 #")) ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 3 #")) "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 2 #" ("
0 0 14 3 11 #"lob-member?"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 33 #"                                ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 38 #"                                      "
0 0 14 3 5 #"empty"
0 0 22 3 4 #")) ("
0 0 14 3 9 #"make-ball"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 2 #"-1"
0 0 22 3 1 #" "
0 0 20 3 1 #"'"
0 0 14 3 3 #"red"
0 0 22 3 3 #")) "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 5 #";;;A7"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 3 #"txt"
0 0 22 3 2 #" ("
0 0 14 3 7 #"content"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 40 #";; Txt = (make-txt String Number Number)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 20 #";; LoTxt is one of: "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 12 #";; -- empty "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 22 #";; -- (cons Txt LoTxt)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 22 3 2 #" ("
0 0 14 3 5 #"image"
0 0 22 3 1 #" "
0 0 14 3 6 #"hidden"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 35 #";; World = (make-world Image LoTxt)"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 18 #";; intepretation: "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 69
(
 #";;  The world's image represents the image that the audience can see"
 #"."
) 0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 17 3 71
(
 #";;  The world's list of Txt represents the yet-to-be-revealed elemen"
 #"ts."
) 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 36 #";;;Sets the coord of \"Get Set.\" text"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 11 #"Get-set-loc"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 3 #"200"
0 0 22 3 1 #" "
0 0 20 3 3 #"200"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 21 #";;the y-offset from \""
0 0 17 3 3 #"Get"
0 0 17 3 1 #" "
0 0 17 3 4 #"Set."
0 0 17 3 30 #"\" of \"On Your Mark.\" and \"Go!\""
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 8 #"y-offset"
0 0 22 3 1 #" "
0 0 20 3 2 #"50"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"StartLoTXT"
0 0 22 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 22 3 1 #" "
0 0 19 3 15 #"\"On your mark.\""
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 11 #"Get-set-loc"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 52 #"                                                   ("
0 0 14 3 1 #"-"
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 11 #"Get-set-loc"
0 0 22 3 2 #") "
0 0 22 29 1 #"\n"
0 0 22 3 54 #"                                                      "
0 0 14 3 8 #"y-offset"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                         ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 22 3 1 #" "
0 0 19 3 10 #"\"Get set.\""
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 11 #"Get-set-loc"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                    ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 11 #"Get-set-loc"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 31 #"                               "
0 0 22 29 1 #"\n"
0 0 22 3 32 #"                               ("
0 0 14 3 4 #"cons"
0 0 22 3 2 #" ("
0 0 14 3 8 #"make-txt"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"Go!\""
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 22 3 1 #" "
0 0 14 3 11 #"Get-set-loc"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 54 #"                                                     ("
0 0 14 3 1 #"+"
0 0 22 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 22 3 1 #" "
0 0 14 3 11 #"Get-set-loc"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 56 #"                                                        "
0 0 14 3 8 #"y-offset"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 37 #"                                     "
0 0 14 3 5 #"empty"
0 0 22 3 4 #"))))"
0 0 22 29 1 #"\n"
0 0 22 3 24 #"                        "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"WORLD-0"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 22 3 2 #" ("
0 0 14 3 11 #"empty-scene"
0 0 22 3 1 #" "
0 0 20 3 3 #"400"
0 0 22 3 1 #" "
0 0 20 3 3 #"400"
0 0 22 3 2 #") "
0 0 14 3 10 #"StartLoTXT"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 26 #";;;display: World -> Image"
0 0 22 29 1 #"\n"
0 0 17 3 41 #";;;Takes the world and displays its image"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 7 #"display"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 14 3 11 #"world-image"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 23 #";;;next: World -> World"
0 0 22 29 1 #"\n"
0 0 17 3 68
#";;;It puts the first piece of text in the LoTXT on the World's image"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 4 #"next"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 22 3 2 #"[("
0 0 14 3 6 #"empty?"
0 0 22 3 2 #" ("
0 0 14 3 12 #"world-hidden"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")) "
0 0 14 3 1 #"w"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 22 3 2 #" ("
0 0 14 3 10 #"make-world"
0 0 22 3 2 #" ("
0 0 14 3 11 #"place-image"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ("
0 0 14 3 4 #"text"
0 0 22 3 2 #" ("
0 0 14 3 11 #"txt-content"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 12 #"world-hidden"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 42 #"                                          "
0 0 20 3 2 #"20"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"blue\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ("
0 0 14 3 5 #"txt-x"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 12 #"world-hidden"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ("
0 0 14 3 5 #"txt-y"
0 0 22 3 2 #" ("
0 0 14 3 5 #"first"
0 0 22 3 2 #" ("
0 0 14 3 12 #"world-hidden"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 3 #")))"
0 0 22 29 1 #"\n"
0 0 22 3 23 #"                      ("
0 0 14 3 11 #"world-image"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 2 #"))"
0 0 22 29 1 #"\n"
0 0 22 3 22 #"                     ("
0 0 14 3 4 #"rest"
0 0 22 3 2 #" ("
0 0 14 3 12 #"world-hidden"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 22 3 6 #")))]))"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"#|"
0 0 17 29 1 #"\n"
0 0 17 3 1 #"("
0 0 17 3 8 #"big-bang"
0 0 17 3 1 #" "
0 0 17 3 7 #"WORLD-0"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"             ("
0 0 17 3 7 #"on-tick"
0 0 17 3 1 #" "
0 0 17 3 4 #"next"
0 0 17 3 1 #" "
0 0 17 3 1 #"1"
0 0 17 3 1 #")"
0 0 17 29 1 #"\n"
0 0 17 3 14 #"             ("
0 0 17 3 7 #"to-draw"
0 0 17 3 1 #" "
0 0 17 3 7 #"display"
0 0 17 3 14 #"))            "
0 0 17 29 1 #"\n"
0 0 17 3 1 #" "
0 0 17 29 1 #"\n"
0 0 17 3 2 #"|#"
0 0 22 29 1 #"\n"
0 0 17 3 14 #";;;It works :)"
0           0
